services:

  Frontend:
    image: node:24-alpine
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    volumes:
      - ./knuffel-frontend:/app
      - node-modules-frontend:/app/node_modules
    ports:
      - "3000:5173"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://127.0.0.1:5173/" ]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 80s

  APIGateway:
    image: ghcr.io/knuffelgame/apigateway:latest
    pull_policy: build
    build:
      context: backend/services/APIGateway
    ports:
      - 8080:8080

  AuthService:
    image: ghcr.io/knuffelgame/authservice:latest
    pull_policy: build
    build:
      context: backend
      dockerfile: services/AuthService/Dockerfile
    env_file:
      - env.d/AuthService.env
    ports:
      - 8081:8081

  GameService:
    image: ghcr.io/knuffelgame/gameservice:latest
    pull_policy: build
    build:
      context: backend/services/GameService
    ports:
      - 8082:8082
      -
  LobbyService:
    image: ghcr.io/knuffelgame/lobbyservice:latest
    pull_policy: build
    build:
      context: backend
      dockerfile: services/LobbyService/Dockerfile
    env_file:
      - env.d/LobbyService.env
    ports:
      - 8083:8083

  SSEService:
    image: ghcr.io/knuffelgame/sseservice:latest
    pull_policy: build
    build:
      context: backend/services/SSEService
    ports:
      - 8084:8084

  Postgres:
    image: postgres:18-alpine
    env_file:
      - env.d/Postgres.env
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./database/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "game" ]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 80s


volumes:
  node-modules-frontend:
  pg_data: